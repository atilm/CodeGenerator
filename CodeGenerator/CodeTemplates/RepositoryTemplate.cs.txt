using System.Collections.Generic;
using System.Linq;
using Models;

namespace Repositories
{
	// Generated by the CodeGenerator

    public class [[ClassName]] : [[InterfaceName]]
    {
        public [[ClassName]]()
        {
            domainObjects = new List<[[DomainObjectName]]>();
            currentIndex = 0;
        }

        public [[DomainObjectName]] Save([[DomainObjectName]] domainObject)
        {
            var forDb = domainObject.Clone();
            forDb.Id = GetNextIndex();

            domainObjects.Add(forDb);

            return forDb.Clone();
        }

        public bool Update([[DomainObjectName]] domainObject)
        {
            var obj = domainObjects.FirstOrDefault(o => o.Id == domainObject.Id);

            if (obj == null)
                return false;

            var index = domainObjects.IndexOf(obj);

            domainObjects[index] = domainObject.Clone();
            return true;
        }

        public bool Delete(uint id)
        {
            var domainObject = domainObjects.FirstOrDefault(o => o.Id == id);

            if (domainObject == null)
                return true;

            domainObjects.Remove(domainObject);
            return true;
        }

        public List<[[DomainObjectName]]> GetAll()
        {
            return domainObjects;
        }

        public [[DomainObjectName]] GetById(uint id)
        {
            return domainObjects.FirstOrDefault(o => o.Id == id);
        }

		private uint GetNextIndex()
        {
            var index = currentIndex;
            currentIndex += 1;

            return index;
        }

        private List<[[DomainObjectName]]> domainObjects;
        private uint currentIndex;
    }
}